import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

const RazorPay = () => {
  const navigate = useNavigate();
  const [orderDetails, setOrderDetails] = useState(null);

  // Load Razorpay script dynamically
  const loadScript = (src) => {
    return new Promise((resolve) => {
      const script = document.createElement("script");
      script.src = src;
      script.onload = () => resolve(true);
      script.onerror = () => resolve(false);
      document.body.appendChild(script);
    });
  };

  // Create an order and fetch payment details including QR code
  const createOrder = async () => {
    try {
      const response = await fetch("http://localhost:5173/bookingSummary", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ amount: 50000 }), 
      });
      const data = await response.json();

      if (data && data.id) {
        setOrderDetails(data); 
      } else {
        alert("Failed to create Razorpay order. Please try again.");
      }
    } catch (error) {
      console.error("Error creating order:", error);
      alert("Error creating order. Please try again.");
    }
  };

  // Initialize Razorpay and handle the payment process
  const displayRazorpay = async () => {
    const res = await loadScript("https://checkout.razorpay.com/v1/checkout.js");

    if (!res) {
      alert("Razorpay SDK failed to load. Are you online?");
      return;
    }

    const options = {
      key: "your_razorpay_key", 
      amount: orderDetails.amount.toString(),
      currency: orderDetails.currency,
      name: "Your Company Name",
      description: "Test Transaction",
      image: "https://your-logo-url.com/logo.png",
      order_id: orderDetails.id,
      handler: async function (response) {
        const result = await fetch("http://localhost:5173/api/payment/order", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            order_id: orderDetails.id,
            payment_id: response.razorpay_payment_id,
            signature: response.razorpay_signature,
          }),
        });
        const resultData = await result.json();
        if (resultData.success) {
          alert("Payment successful!");
        } else {
          alert("Payment verification failed!");
        }
      },
      prefill: {
        name: "John Doe", // Replace with actual user data
        email: "john.doe@example.com", // Replace with actual user data
        contact: "9999999999", // Replace with actual user data
      },
      notes: {
        address: "Corporate Office",
      },
      theme: {
        color: "#3399cc",
      },
    };

    const paymentObject = new window.Razorpay(options);
    paymentObject.open();
  };

  useEffect(() => {
    createOrder();
  }, []);

  if (!orderDetails) {
    return <div>Loading...</div>;
  }

  return (
    <div className="container text-center mt-5">
      <h2>Complete Your Payment</h2>
      <div className="mt-4">
        <h5>Payment Details</h5>
        <p><strong>Order ID:</strong> {orderDetails.id}</p>
        <p><strong>Amount:</strong> Rs. {orderDetails.amount / 100}</p>
        <p><strong>Currency:</strong> {orderDetails.currency}</p>
        <div>
          <h6>Payment QR Code</h6>
          <img
            src={orderDetails.qr_code_url} // Display QR code generated by Razorpay
            alt="Payment QR Code"
            style={{ width: "200px", height: "200px" }}
          />
        </div>
        <button className="btn btn-primary mt-3" onClick={displayRazorpay}>
          Pay Now
        </button>
      </div>
    </div>
  );
};

export default RazorPay;
